diff --git a/src/bjoern.c b/src/bjoern.c
index 51911a2..b658371 100644
--- a/src/bjoern.c
+++ b/src/bjoern.c
@@ -18,11 +18,23 @@ static PyMethodDef Bjoern_FunctionTable[] = {
     {NULL,  NULL, 0, NULL}
 };
 
+IF_DEBUG(
+    static PyObject* gc_module
+);
+
+
 PyMODINIT_FUNC init_bjoern()
 {
     #include "stringcache.h"
     Py_InitModule("_bjoern", Bjoern_FunctionTable);
 
+IF_DEBUG(
+    gc_module = PyImport_ImportModule("gc");
+    PyObject* args = PyTuple_Pack(1, PyObject_GetAttrString(gc_module, "DEBUG_LEAK"));
+    assert(PyObject_CallObject(PyObject_GetAttrString(gc_module, "set_debug"), args) != NULL);
+    Py_DECREF(args)
+);
+
 #ifdef WANT_ROUTING
     import_re_module();
     init_routing();
@@ -271,4 +283,31 @@ finish:
     close(transaction->client_fd);
     transaction->handler_finalize(transaction);
     Transaction_free(transaction);
+
+#if 0
+IF_DEBUG(
+    /* import pprint */
+    PyObject* pprint_module;
+    PyObject* args;
+    assert((pprint_module = PyImport_ImportModule("pprint")) != NULL);
+
+    /* gc.collect() */
+    assert(PyObject_CallObject(PyObject_GetAttrString(gc_module, "collect"), NULL) != NULL);
+
+    /* print gc.get_referrers(wsgi.request_environ) */
+    args = PyTuple_Pack(1, transaction->handler_data.wsgi.request_environ);
+    PyObject* retval = PyObject_CallObject(PyObject_GetAttrString(gc_module, "get_referrers"), args);
+    assert(retval != NULL);
+    Py_DECREF(args);
+    args = PyTuple_Pack(1, retval);
+    assert(PyObject_CallObject(PyObject_GetAttrString(pprint_module, "pprint"), args) != NULL);
+    Py_DECREF(args);
+
+    /* print gc.garbage() */
+    assert((args = PyTuple_Pack(1, PyObject_GetAttrString(gc_module, "garbage"))) != NULL);
+    assert(PyObject_CallObject(PyObject_GetAttrString(pprint_module, "pprint"), args) != NULL);
+    Py_DECREF(args);
+    fflush(stdout)
+);
+#endif
 }
